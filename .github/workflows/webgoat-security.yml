name: CICD

on:
  push:
    branches: johny-facens  # Execute em pushes para main e develop
  pull_request:
    branches: johny-facens  # Execute em pull requests para main e develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Necessário para o SonarCloud analisar todo o histórico do código

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: 21
        distribution: 'temurin'
        cache: maven

    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Build with Maven
      run: mvn -B verify

    - name: SonarCloud Analysis
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Necessário para o SonarCloud
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Token do SonarCloud
      run: mvn sonar:sonar -Dsonar.projectKey=johnyramos -Dsonar.organization='Johny Ramos - Pr3sc0tt' -Dsonar.host.url=https://sonarcloud.io

    - name: Dependency-Check
      uses: dependency-check/dependency-check_action@main
      with:
        scan-path: '.'
        format: 'ALL'  # Gera relatórios em vários formatos
        output-directory: 'dependency-check-report' # Diretório para salvar relatório

    - name: Upload Dependency-Check report
      uses: actions/upload-artifact@v3
      with:
        name: dependency-check-report
        path: dependency-check-report

    - name: Start WebGoat
      run: mvn -pl webgoat-server spring-boot:start &> /dev/null & sleep 30 # Inicia o WebGoat em background

    - name: OWASP ZAP Scan
      uses: zaproxy/action-baseline@v0.7.0
      with:
        target: 'http://localhost:8080/WebGoat'  # URL do WebGoat
        rules_file_name: '.zap/rules.tsv'  # Arquivo de regras customizadas (opcional)
        cmd_options: '-config api.key=${{ secrets.ZAP_API_KEY }}' # Chave da API do ZAP (opcional)



# Substitua com as suas informações:
# YOUR_SONAR_PROJECT_KEY
# YOUR_SONAR_ORGANIZATION


# Crie os seguintes secrets no seu repositório:
# SONAR_TOKEN (token do SonarCloud)
# ZAP_API_KEY (chave da API do ZAP - opcional, necessário apenas para recursos avançados)
